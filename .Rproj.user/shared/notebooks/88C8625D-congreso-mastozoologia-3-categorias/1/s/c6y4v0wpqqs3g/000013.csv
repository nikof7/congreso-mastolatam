"0","# Función para categorizar las variable y calcular las densidades"
"0","calculate_density <- function(data, var_name) {"
"0","  "
"0","  # Definir el punto de corte para las categorías"
"0","  half_value  <- max(data[[var_name]]) / 2"
"0",""
"0","  # Crear una nueva columna para la categoría"
"0","  data <- data %>%"
"0","    mutate(cat = case_when("
"0","      !!sym(var_name) == 0 ~ ""0"","
"0","      !!sym(var_name) <= half_value ~ ""< 50%"","
"0","      !!sym(var_name) >= half_value ~ ""> 50%"""
"0","    ))"
"0",""
"0","  # Extraer las horas solares para cada categoría"
"0","  dat_0 <- data %>% filter(cat == ""0"") %>% pull(solar)"
"0","  dat_below_50 <- data %>% filter(cat == ""< 50%"") %>% pull(solar)"
"0","  dat_above_50 <- data %>% filter(cat == ""> 50%"") %>% pull(solar)"
"0",""
"0","  # Ajuste de la densidad para cada conjunto de datos, sólo si hay suficientes datos"
"0","  act_0 <- if(length(dat_0) > 1) fitact(dat_0) else NULL"
"0","  act_below_50 <- if(length(dat_below_50) > 1) fitact(dat_below_50) else NULL"
"0","  act_above_50 <- if(length(dat_above_50) > 1) fitact(dat_above_50) else NULL"
"0",""
"0","  # Función para extraer pdf si es válido"
"0","  extract_pdf <- function(act_obj, category) {"
"0","    if (!is.null(act_obj) && inherits(act_obj@pdf, ""matrix"")) {"
"0","      data.frame("
"0","        angle = act_obj@pdf[, ""x""],"
"0","        density = act_obj@pdf[, ""y""],"
"0","        category = category"
"0","      )"
"0","    } else {"
"0","      data.frame("
"0","        angle = numeric(0),"
"0","        density = numeric(0),"
"0","        category = character(0)"
"0","      )"
"0","    }"
"0","  }"
"0",""
"0","  # Extraer los pdf para cada categoría"
"0","  density_data_0 <- extract_pdf(act_0, ""0"")"
"0","  density_data_below_50 <- extract_pdf(act_below_50, ""<50%"")"
"0","  density_data_above_50 <- extract_pdf(act_above_50, "">50%"")"
"0",""
"0","  # Combinar los dataframes de densidad en uno solo"
"0","  density_data <- bind_rows(density_data_0, density_data_below_50, density_data_above_50)"
"0","  "
"0","  # Devolver tanto la tabla de densidad como la tabla original con la categoría"
"0","  return(list("
"0","    density_data = density_data,"
"0","    categorized_data = data %>% select(!!sym(var_name), cat)"
"0","  ))"
"0","}"
"0",""
"0","# Generalización para todas las especies y variables"
"0","generalized_density_data <- data %>%"
"0","  group_by(sp) %>%"
"0","  nest() %>%"
"0","  mutate("
"0","    density_tr_btau_sys = map(data, ~ calculate_density(.x, ""tr_btau_sys"")),"
"0","    density_n_tech_sys = map(data, ~ calculate_density(.x, ""n_tech_sys"")),"
"0","    density_tr_cfam_sys = map(data, ~ calculate_density(.x, ""tr_cfam_sys""))"
"0","  )"
"0",""
